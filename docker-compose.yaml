version: '3.8'

services:
  lean-engine:
    image: quantconnect/lean:latest
    container_name: alphaquanta-lean
    volumes:
      - ./data:/Lean/Data
      - ./algorithms:/Lean/Algorithm.Python
      - ./results:/Results
    environment:
      - LEAN_MODE=LIVE
      - QC_API_ACCESS_TOKEN=${QC_API_TOKEN}
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=8080"
      - "prometheus.io/path=/metrics"
    restart: unless-stopped

  ib-gateway:
    image: ghcr.io/gnzsnz/ib-gateway:latest
    container_name: alphaquanta-ib-gateway
    environment:
      - TWS_USERID=${IB_USERNAME}
      - TWS_PASSWORD=${IB_PASSWORD}
      - TRADING_MODE=paper  # paper or live
      - VNC_SERVER_PASSWORD=${VNC_PASSWORD:-alphaquanta}
    ports:
      - "4001:4001"  # IB Gateway API port
      - "4002:4002"  # IB Gateway API port (backup)
      - "5900:5900"  # VNC port for debugging
    volumes:
      - ib-settings:/root/Jts
    healthcheck:
      test: ["CMD", "netstat", "-an", "|", "grep", "4001"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    restart: unless-stopped

  qiskit-runtime:
    image: qiskit/qiskit:latest
    container_name: alphaquanta-qiskit
    environment:
      - IBM_QUANTUM_TOKEN=${IBM_QUANTUM_TOKEN}
      - DWAVE_API_TOKEN=${DWAVE_API_TOKEN}
    volumes:
      - ./quantum:/workspace/quantum
      - ./qconfig.yaml:/workspace/qconfig.yaml:ro
    working_dir: /workspace
    command: ["python", "-c", "import qiskit; print('Qiskit Runtime ready')"]
    healthcheck:
      test: ["CMD", "python", "-c", "import qiskit; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: alphaquanta-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: alphaquanta-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-alphaquanta}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: alphaquanta-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-alphaquanta}
    volumes:
      - n8n-data:/home/node/.n8n
      - ./workflows:/workflows:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  ib-settings:
  prometheus-data:
  grafana-data:
  n8n-data:

networks:
  default:
    name: alphaquanta-network
